name: Build, push, and deploy

on: push

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/navikt/tiltakspenger-flate
  IMAGE_LABEL: dev
  docker_image: ghcr.io/navikt/tiltakspenger-flate:${{ github.sha }}
  REACT_APP_BACKEND_API_ROOT: https://tiltakspenger.dev.intern.nav.no
  CI: true
  NODE_VERSION: '16.x'

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    name: Build and publish Docker image
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
      - name: Install production artifact
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Run tests
        run: npm run test
      - name: Build and publish Docker image
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${docker_image} .
          docker push ${docker_image}
      - name: Notify Slack in case of build failure
        if: ${{ failure() && (github.ref == 'refs/heads/main') }}
        run: |
          curl -X POST --data-urlencode "payload={ \"attachments\": [{ \"pretext\": \"[tiltakspenger-flate] Build failed :cry:\", \"color\": \"danger\", \"fields\": [ { \"title\": \"Author\", \"value\": \"$AUTHOR\", \"short\": false }, { \"title\": \"Commit\", \"value\": \"<https://github.com/navikt/tiltakspenger-flate/commit/$GITHUB_SHA>\", \"short\": false } ] }] }" $WEBHOOK_URL
        env:
          BRANCH: ${{ github.ref }}
          AUTHOR: ${{ github.event.pusher.name }}
          WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
  deploy-dev:
    name: Deploy application to dev
    needs:
      - build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/vars/dev.yaml
          VAR: image=${{ env.docker_image }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-prod:
    name: Deploy to NAIS prod
    needs: deploy-dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/vars/prod.yaml
          VAR: image=${{ env.docker_image }}
