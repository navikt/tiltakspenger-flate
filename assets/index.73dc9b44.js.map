{"version":3,"file":"index.73dc9b44.js","sources":["../../vite/modulepreload-polyfill","../../src/components/SearchBar.tsx","../../src/state/alerts.ts","../../src/components/fnrValidation.ts","../../src/components/Tabs.tsx","../../src/components/Tag.tsx","../../src/components/BehandlingsTag.tsx","../../src/components/Periode.tsx","../../src/api/common.ts","../../src/api/soknad.ts","../../src/util/dateFormatting.ts","../../src/pages/soknadList/columns.ts","../../src/pages/ErrorPage.tsx","../../src/components/Spinner.tsx","../../src/pages/soknadList/ApplicationListPage.tsx","../../src/components/CopyableText.tsx","../../src/components/Breadcrumbs.tsx","../../src/components/timeline/TimelineLabel.tsx","../../src/components/timeline/months.ts","../../src/components/timeline/Timeline.tsx","../../src/components/timeline/Timelines.tsx","../../src/pages/person/LeftSidebar.tsx","../../src/pages/DetailsPage.tsx","../../src/pages/person/PaymentsTable.tsx","../../src/pages/TestPage.tsx","../../src/pages/person/BarneTillegg.tsx","../../src/state/soknad.ts","../../src/pages/person/SoknadContent.tsx","../../src/pages/person/SoknadListe.tsx","../../src/pages/person/YtelserSection.tsx","../../src/pages/person/Content.tsx","../../src/routes.tsx","../../src/components/Navbar.tsx","../../src/components/InfoMessage.tsx","../../src/mocks/soknadByIdent.ts","../../src/mocks/payments.ts","../../src/mocks/person.ts","../../src/mocks/index.ts","../../src/mocks/handlers.ts","../../src/mocks/browser.ts","../../src/App.tsx","../../vite/preload-helper","../../src/reportWebVitals.ts","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","// hentet fra helse-speil\nimport React, { useState } from 'react';\nimport { Search as SearchIcon } from '@navikt/ds-icons';\n\ninterface SearchBarProps {\n  onSearch: (value: string) => Promise<any>;\n}\n\nexport const SearchBar = ({ onSearch }: SearchBarProps) => {\n  const [value, setValue] = useState('');\n\n  const search = () => {\n    if (value.length > 0) {\n      onSearch(value.replace(/\\s/g, '')).then(() => setValue(''));\n    }\n  };\n\n  const onKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && value.length > 0) {\n      search();\n    }\n  };\n\n  const onChange = (event: React.ChangeEvent) => {\n    setValue((event.target as HTMLInputElement).value);\n  };\n\n  return (\n    <div className=\"flex mx-4 my-2\">\n      <div className=\"flex border border-gray-200 place-content-center rounded\">\n        <input\n          className=\"bg-black focus:outline-none text-white p-2\"\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          value={value}\n        />\n        <button onClick={search}>\n          <SearchIcon\n            aria-label=\"Søk fødselsnummer\"\n            className=\"m-1  text-gray-200\"\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { atom, selector, useResetRecoilState, useSetRecoilState } from 'recoil';\n\nexport const Scopes = {\n  GLOBAL: undefined,\n  APPLICATIONLIST: '/',\n  DETAILS: '/*',\n};\n\nexport interface AlertObject {\n  key: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  message: string;\n  scope?: string;\n  technical?: string;\n  ephemeral?: boolean;\n}\n\nexport const alertsState = atom<AlertObject[]>({\n  key: 'alertsState',\n  default: [],\n});\n\nexport const alertFilterState = atom<string | undefined>({\n  key: 'alertFilter',\n  default: Scopes.GLOBAL,\n});\n\nexport const alertsForScope = selector({\n  key: 'alertsForScope',\n  get: ({ get }) => {\n    const alerts = get(alertsState);\n    const alertFilter = get(alertFilterState);\n    return alerts.filter(\n      ({ scope }) => scope === Scopes.GLOBAL || scope === alertFilter\n    );\n  },\n});\n\nexport const useAlertFilter = (scope?: string) => {\n  const setAlertFilter = useSetRecoilState(alertFilterState);\n\n  useEffect(() => {\n    setAlertFilter(scope);\n  }, []);\n};\n\nexport const useAddAlert = () => {\n  const setAlerts = useSetRecoilState(alertsState);\n\n  return (alert: AlertObject) => {\n    setAlerts((alerts) => [\n      ...alerts.filter((it) => it.key !== alert.key),\n      alert,\n    ]);\n  };\n};\n\nexport const useOperationErrorHandler = (operation: string) => {\n  const alert: AlertObject = {\n    key: operation,\n    type: 'error',\n    message: `Det oppsto en feil. Handlingen som ikke ble utført: ${operation}`,\n    scope: Scopes.GLOBAL,\n  };\n\n  const setAlerts = useSetRecoilState(alertsState);\n\n  return (ex: Error) => {\n    console.log(`Feil ved ${operation}. ${ex.message}`);\n    setAlerts((alerts) => [\n      ...alerts.filter((it) => it.key !== alert.key),\n      alert,\n    ]);\n  };\n};\n\nexport const useRemoveAlert = () => {\n  const setAlerts = useSetRecoilState(alertsState);\n\n  return (key: string) => {\n    setAlerts((alerts) => alerts.filter((it) => it.key !== key));\n  };\n};\n\nexport const useAddEphemeralAlert = () => {\n  const addAlert = useAddAlert();\n  const removeAlert = useRemoveAlert();\n\n  return (alert: AlertObject, timeToLiveMs: number) => {\n    addAlert({ ...alert, ephemeral: true });\n    setTimeout(() => removeAlert(alert.key), timeToLiveMs);\n  };\n};\n\nexport const useRemoveAllAlerts = () => useResetRecoilState(alertsState);\n","const weights1 = [3, 7, 6, 1, 8, 9, 4, 5, 2];\nconst weights2 = [5, 4, 3, 2, 7, 6, 5, 4, 3, 2];\n\nconst sum = (id: number[], factors: number[]) =>\n  factors.map((f, i) => f * id[i]).reduce((acc, curr) => acc + curr, 0);\n\nconst checksum = (id: number[], weigths: number[]) =>\n  (11 - (sum(id, weigths) % 11)) % 11;\n\nexport const isValidFnr = (id: string) => {\n  if (id?.trim().length != 11) return false;\n\n  const idAsArray: number[] = id.split('').map((c) => parseInt(c, 10));\n\n  if (checksum(idAsArray, weights1) != idAsArray[9]) return false;\n\n  return checksum(idAsArray, weights2) == idAsArray[10];\n};\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nconst selectedClass = 'border-opacity-100';\ninterface TabProps<T> {\n  selected?: boolean;\n  value: T;\n  onClick?: () => void;\n}\n\nexport function Tab<T>({\n  children,\n  selected,\n  onClick,\n}: TabProps<T> & { children: ReactElement | string }) {\n  return (\n    <button\n      onClick={onClick}\n      className={`p-16 font-bold hover:bg-gray-100 border-b-4 border-blue-400  ${\n        selected ? selectedClass : 'border-opacity-0'\n      }`}\n      role=\"tab\"\n    >\n      {children}\n    </button>\n  );\n}\n\ninterface TabsProps<T> {\n  onTabChange?: (tabIndex: T) => void;\n  defaultValue: T;\n  className?: string;\n}\n\nexport function Tabs<T>({\n  children,\n  className,\n  onTabChange,\n  defaultValue,\n}: TabsProps<T> & { children: React.ReactElement[] }) {\n  const [isFirst, setIsFirst] = useState(true);\n  const [value, setValue] = useState<T>(defaultValue);\n\n  const getValueByIndex = (index: number): T => children[index]?.props?.value;\n  const selectedIndex = children.findIndex(\n    (child: ReactElement) => child?.props?.value === value\n  );\n\n  useEffect(() => {\n    if (isFirst) {\n      setIsFirst(false);\n      return;\n    }\n    onTabChange?.(value);\n  }, [value]);\n\n  return (\n    <div role=\"tablist\" className={className || ''}>\n      {React.Children.map(children, (child, index) => {\n        return React.cloneElement(child as ReactElement, {\n          selected: selectedIndex === index,\n          onClick: () => {\n            const anyChild = child as any;\n            if (anyChild.props?.onClick) {\n              anyChild.props.onClick();\n            }\n            setValue(getValueByIndex(index));\n          },\n        });\n      })}\n    </div>\n  );\n}\n","import React, { FC } from 'react';\n\nconst Tag: FC<{ className?: string }> = ({ children, className = '' }) => {\n  return (\n    <div className={`border rounded text-xs font-bold ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default Tag;\n","import Tag from './Tag';\nimport React, { FC } from 'react';\n\nexport enum Behandling {\n  ForsteGang,\n  Forlengelse,\n  ForlengelseIT,\n  Revurdering,\n  Klage,\n  Stikkprove,\n  QA,\n}\n\nconst shortNames = {\n  [Behandling.ForsteGang]: {\n    value: 'F',\n    className: 'border-purple-200 bg-purple-100',\n    text: 'Førstegb.',\n  },\n  [Behandling.Forlengelse]: {\n    value: 'FL',\n    className: 'border-sky-400 bg-sky-200',\n    text: 'Forlengelse',\n  },\n  [Behandling.ForlengelseIT]: {\n    value: 'FI',\n    className: 'border-stone-400 bg-stone-200',\n    text: 'Forlengelse IT',\n  },\n  [Behandling.Revurdering]: {\n    value: 'R',\n    className: 'border-yellow-400 bg-yellow-200',\n    text: 'Revurdering',\n  },\n  [Behandling.Klage]: {\n    value: 'K',\n    className: 'border-red-400 bg-red-200',\n    text: 'Klage',\n  },\n  [Behandling.Stikkprove]: {\n    value: 'S',\n    className: 'border-red-400 bg-red-200',\n    text: 'Stikkprøve',\n  },\n  [Behandling.QA]: {\n    value: 'QA',\n    className: 'border-yellow-400 bg-yellow-200',\n    text: 'QA',\n  },\n};\n\nconst BehandlingsTag: FC<{ behandling: Behandling }> = ({ behandling }) => {\n  return (\n    <div className=\"flex place-content-evenly\">\n      <Tag\n        className={`w-20 flex justify-center mr-2 ${shortNames[behandling].className}`}\n      >\n        {shortNames[behandling].value}\n      </Tag>\n      {shortNames[behandling].text}\n    </div>\n  );\n};\n\nexport default BehandlingsTag;\n","import React, { FC } from 'react';\n\nexport type Datoer = {\n  fom: string | null;\n  tom: string | null;\n};\n\nconst Periode: FC<Datoer> = (datoer) => {\n  return (\n    <div className=\"flex place-content-evenly\">\n      {datoer.fom + ' - ' + datoer.tom}\n    </div>\n  );\n};\n\nexport default Periode;\n","import { useState } from 'react';\n\nexport const backendUrl = '';\n\nconst getBody = async (res: Response) => {\n  if (res.headers.get('content-type')?.startsWith('application/json')) {\n    return res.json();\n  }\n  return res.text();\n};\n\nexport const HTTP = {\n  GET: (url: string, config?: RequestInit) =>\n    fetch(url, config).then(async (res) => {\n      if (!res.ok)\n        return Promise.reject({\n          body: await getBody(res),\n          status: res.status,\n        });\n\n      return getBody(res);\n    }),\n};\n\nexport const useRequest = <T>(doFetch: () => Promise<T>) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [result, setResult] = useState<T | undefined>();\n  const [error, setError] = useState<any>();\n\n  const run = async () => {\n    try {\n      setIsLoading(true);\n      const result = await doFetch();\n      setResult(result);\n    } catch (e: any) {\n      setError(e?.body);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    run,\n    isLoading,\n    result,\n    error,\n  };\n};\n\nexport type Paginated<T> = {\n  data: T[];\n  offset: number;\n  pageSize: number;\n  total: number;\n};\n","import { backendUrl, HTTP, Paginated } from './common';\n\nexport type SoknadStatus = 'Behandlet' | 'Ikke behandlet' | 'Avslag';\n\nexport interface Soknad {\n  id: string;\n  opprettet: null | string;\n  ident: string;\n  fornavn: string;\n  etternavn: string;\n  brukerRegistrertStartDato: string | null;\n  brukerRegistrertSluttDato: string | null;\n  systemRegistrertStartDato: string | null;\n  systemRegistrertSluttDato: string | null;\n}\n\nexport const getSoknader = (ident: string): Promise<Paginated<Soknad>> => {\n  return HTTP.GET(`${backendUrl}/api/soknad?ident=${ident}`);\n};\n","import { format as dateFnsFormat } from 'date-fns';\nexport const format = (\n  date: string | number | Date | undefined | null,\n  pattern: string\n): string => {\n  if (!date) return '-';\n  if (typeof date !== 'string' || isNaN(Date.parse(date))) return '-';\n  return dateFnsFormat(Date.parse(date), pattern);\n};\n","import { ReactElement } from 'react';\nimport { SoknadWithStatus } from './ApplicationListPage';\nimport { format } from '../../util/dateFormatting';\n\nexport const columns: {\n  key: keyof SoknadWithStatus;\n  name: string;\n  title: string;\n  dataIndex: string;\n  render?: (\n    value: unknown,\n    soknad: SoknadWithStatus,\n    index: number\n  ) => ReactElement | string;\n  sorter?: (a: SoknadWithStatus, b: SoknadWithStatus) => number;\n  sortDirections?: ('descend' | 'ascend')[];\n}[] = [\n  {\n    key: 'opprettet',\n    dataIndex: 'opprettet',\n    name: 'Opprettet',\n    title: 'Opprettet',\n    sorter: (a, b): number =>\n      new Date(a?.opprettet || '').getTime() -\n      new Date(b?.opprettet || '').getTime(),\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    key: 'type',\n    dataIndex: 'type',\n    name: 'Behandlingstype',\n    title: 'Behandlingstype',\n  },\n  {\n    key: 'ident',\n    dataIndex: 'ident',\n    name: 'Fødselsnr',\n    title: 'Fødselsnr',\n\n    sorter: (a, b): number =>\n      a.ident.toLocaleLowerCase().localeCompare(b.ident.toLocaleLowerCase()),\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    key: 'fornavn',\n    dataIndex: 'navn',\n    name: 'Søker',\n    title: 'Søker',\n    render: (_, data) => {\n      return `${data.etternavn} ${data.fornavn}`;\n    },\n    sorter: (a, b): number =>\n      a.etternavn\n        .toLocaleLowerCase()\n        .localeCompare(b.etternavn.toLocaleLowerCase()),\n    sortDirections: ['descend', 'ascend'],\n  },\n  /*\n  {\n    key: 'typeTiltak',\n    dataIndex: 'typeTiltak',\n    name: 'Tiltakstype',\n    title: 'Tiltakstype',\n    sorter: (a, b): number =>\n      a.tiltaksType\n        ?.toLocaleLowerCase()\n        .localeCompare(b.tiltaksType?.toLocaleLowerCase() || '') || 1,\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    key: 'tiltaksNavn',\n    dataIndex: 'tiltaksNavn',\n    name: 'Tiltaksplass',\n    title: 'Tiltaksplass',\n    sorter: (a, b): number =>\n      b.tiltaksNavn\n        ?.toLocaleLowerCase()\n        .localeCompare(a.tiltaksNavn?.toLocaleLowerCase() || '') || 1,\n    sortDirections: ['descend', 'ascend'],\n  },*/\n  {\n    key: 'periode',\n    dataIndex: 'periode',\n    name: 'Periode',\n    title: 'Periode',\n    render: (_, data) => {\n      return `${format(data.brukerRegistrertStartDato, 'dd.MM.yy')}-${format(\n        data.brukerRegistrertSluttDato,\n        'dd.MM.yy'\n      )}`;\n    },\n  },\n  /*\n  {\n    key: 'statusSoknad',\n    dataIndex: 'statusSoknad',\n    name: 'Status',\n    title: 'Status',\n    sorter: (a, b): number =>\n      a.statusSoknad\n        .toLocaleLowerCase()\n        .localeCompare(b.statusSoknad.toLocaleLowerCase()),\n    sortDirections: ['descend', 'ascend'],\n  },*/\n];\n","import React from 'react';\nimport { Result } from 'antd';\nimport { ResultStatusType } from 'antd/es/result';\n\nconst isValidErrorCode = (code: any): code is ResultStatusType => {\n  return (\n    code === 'success' ||\n    code === 'error' ||\n    code === '403' ||\n    code === '404' ||\n    code === '500'\n  );\n};\n\nconst ErrorPage = ({\n  errorCode,\n  message,\n}: {\n  errorCode: ResultStatusType;\n  message: string | undefined;\n}) => {\n  const status = isValidErrorCode(errorCode) ? errorCode : 'error';\n  return (\n    <Result\n      status={status}\n      title={'Something went wrong'}\n      subTitle={message || ''}\n    />\n  );\n};\n\nexport default ErrorPage;\n","import { Loader } from '@navikt/ds-react';\nimport React, { FC, ReactElement } from 'react';\n\nconst Spinner: FC<{ isLoading: boolean }> = ({ isLoading, children }) => {\n  return isLoading ? (\n    <div className=\"mt-8\">\n      <Loader size=\"xlarge\" />\n    </div>\n  ) : (\n    (children as ReactElement)\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport { Spin, Table } from 'antd';\nimport { Tab, Tabs } from '../../components/Tabs';\nimport BehandlingsTag, { Behandling } from '../../components/BehandlingsTag';\nimport Periode from '../../components/Periode';\nimport { useRequest } from '../../api/common';\nimport { useNavigate } from 'react-router-dom';\nimport { personPath } from '../../routes';\nimport { getSoknader, Soknad, SoknadStatus } from '../../api/soknad';\nimport { columns } from './columns';\nimport ErrorPage from '../ErrorPage';\nimport Spinner from '../../components/Spinner';\n\n/*\nconst tags = [\n  Behandling.ForsteGang,\n  Behandling.Forlengelse,\n  Behandling.ForlengelseIT,\n  Behandling.Revurdering,\n  Behandling.Klage,\n  Behandling.Stikkprove,\n  Behandling.QA,\n];*/\n\nexport type SoknadWithStatus = Soknad & {\n  type: JSX.Element;\n  periode: JSX.Element;\n};\n\nconst processedFilter = (soknad: SoknadWithStatus) => false; //soknad.statusSoknad !== 'Ikke behandlet';\nconst unProcessedFilter = (soknad: SoknadWithStatus) => true; // soknad.statusSoknad === 'Ikke behandlet';\nconst soknadStates = {\n  'Ikke behandlet': unProcessedFilter,\n  Behandlet: processedFilter,\n  Avslag: () => true,\n};\n\nconst ApplicationListPage = () => {\n  const [currentTab, setTab] = useState<SoknadStatus>('Ikke behandlet');\n\n  const {\n    run: runGetSoknader,\n    result: soknader,\n    isLoading,\n    error,\n  } = useRequest(() => getSoknader('03837197367'));\n  const enrichedSoknader: SoknadWithStatus[] = (\n    soknader?.data || ([] as Soknad[])\n  ).map((soknad) => ({\n    ...soknad,\n    type: <BehandlingsTag behandling={Behandling.ForsteGang} />,\n    periode: (\n      <Periode\n        fom={soknad.brukerRegistrertStartDato}\n        tom={soknad.brukerRegistrertSluttDato}\n      />\n    ),\n  }));\n\n  const applications = (enrichedSoknader || []).filter(\n    soknadStates[currentTab]\n  );\n\n  useEffect(() => {\n    runGetSoknader();\n  }, []);\n\n  const navigate = useNavigate();\n  const handleClick = ({\n    soknadId,\n    fnr,\n  }: {\n    soknadId: string;\n    fnr: string;\n  }) => {\n    navigate(personPath({ soknadId, fnr }));\n  };\n\n  return (\n    <div>\n      {error ? (\n        <ErrorPage errorCode={error?.status} message={error?.message} />\n      ) : undefined}\n      <Spinner isLoading={isLoading}>\n        <div className=\"flex flex-col items-start p-40\">\n          {!!soknader?.data?.length && (\n            <>\n              <div className=\"self-stretch flex border-b-2 border-gray-200 mb-16\">\n                <Tabs\n                  defaultValue={'Ikke behandlet' as SoknadStatus}\n                  onTabChange={(status: SoknadStatus) => setTab(status)}\n                >\n                  <Tab value={'Ikke behandlet'}>Ikke behandlet</Tab>\n                  <Tab value={'Behandlet'}>Behandlet</Tab>\n                </Tabs>\n              </div>\n              <Table\n                className=\"mt-6\"\n                columns={columns}\n                dataSource={applications.map((data, index) => ({\n                  ...data,\n                  key: index,\n                }))}\n                pagination={{ pageSize: 10 }}\n                onRow={(soknad) => {\n                  return {\n                    onClick: () => {\n                      handleClick({\n                        fnr: soknad.ident.toString(),\n                        soknadId: soknad.id.toString(),\n                      });\n                    },\n                  };\n                }}\n              />\n            </>\n          )}\n        </div>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default ApplicationListPage;\n","import React, { FC } from 'react';\nimport { Copy } from '@navikt/ds-icons';\n\nconst CopyableText: FC<{ text: string }> = ({ text }) => {\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(text);\n  };\n\n  return (\n    <button onClick={copyToClipboard} className=\"flex\">\n      {text}\n      <Copy className=\"ml-3\" />\n    </button>\n  );\n};\n\nexport default CopyableText;\n","import React from 'react';\nimport CopyableText from './CopyableText';\n\nconst Breadcrumbs = () => {\n  return (\n    <div className=\"flex p-16 space-x-16 items-center bg-gray-100\">\n      <div className=\"font-bold\">Sigurd Grøneng</div>\n      <CopyableText text={'121212 12121'} />\n      <div>Boenhet: 0220 (Asker)</div>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\n\nconst TimelineLabel = ({ label }: { label: string }) => {\n  return (\n    <span className=\"font-bold w-36 mr-2 border-r self-stretch py-2\">\n      {label}\n    </span>\n  );\n};\n\nexport default TimelineLabel;\n","export const months = ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun'];\n","import React, { CSSProperties } from 'react';\nimport TimelineLabel from './TimelineLabel';\n\nexport enum TimeLineType {\n  VEDTAK,\n  SOKNAD,\n}\n\nconst colors: Record<TimeLineType, string> = {\n  [TimeLineType.VEDTAK]: 'bg-blue-100 border border-blue-400 border-dashed',\n  [TimeLineType.SOKNAD]: 'bg-green-100 border border-green-400',\n};\n\nconst Timeline = ({\n  label,\n  style,\n  onClick,\n  selected,\n  type = TimeLineType.VEDTAK,\n}: {\n  label: string;\n  style: CSSProperties;\n  onClick: () => void;\n  selected: boolean;\n  type: TimeLineType;\n}) => {\n  return (\n    <div className=\"flex items-center bg-gray-100\">\n      <TimelineLabel label={label} />\n      <button\n        tabIndex={0}\n        onClick={onClick}\n        className={`rounded-full ${colors[type]} p-0 text-left ${\n          selected ? 'font-bold' : ''\n        }`}\n        style={style}\n      >\n        <div className=\"pl-3\">60% - 3 dager</div>\n      </button>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport TimelineLabel from './TimelineLabel';\nimport { months } from './months';\nimport Timeline, { TimeLineType } from './Timeline';\n\nconst TimeLabels = () => {\n  return (\n    <div className=\"flex flex-row\">\n      <TimelineLabel label={'Måned'} />\n      <div className=\"flex flex-1 divide-x divide-solid\">\n        {months.map((month, index) => (\n          <div key={index} className=\"flex-1\">\n            {month}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Timelines = ({\n  onClickTimeline,\n}: {\n  onClickTimeline?: (id: string) => void;\n}) => {\n  const [selected, setSelected] = useState<string | undefined>(undefined);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!selected) return;\n\n    if (Number.isInteger(parseInt(selected))) {\n      navigate(`${location.pathname}/payment/${selected}`);\n    }\n\n    onClickTimeline?.(selected);\n  }, [selected]);\n\n  return (\n    <div className=\"flex  p-4 border-b border-t border-sky-400\">\n      <div className=\"flex flex-col flex-1\">\n        <TimeLabels />\n        <Timeline\n          type={TimeLineType.SOKNAD}\n          onClick={() => setSelected('AAP')}\n          selected={selected === 'AAP'}\n          label={'AAP'}\n          style={{ width: 300 }}\n        />\n        <Timeline\n          type={TimeLineType.VEDTAK}\n          onClick={() => setSelected('Dag')}\n          selected={selected === 'Dag'}\n          label={'Dag'}\n          style={{ width: 400, marginLeft: 250 }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Timelines;\n","import React from 'react';\nimport BehandlingsTag, { Behandling } from '../../components/BehandlingsTag';\nimport SoknadListe from './SoknadListe';\n\nconst LeftSidebar = () => {\n  return (\n    <>\n      <div className=\"border-b border-gray-200 flex justify-between py-4 m-4\">\n        <span className=\" flex\">\n          <BehandlingsTag behandling={Behandling.Forlengelse} />\n        </span>\n      </div>\n      <div className=\"flex space-y-6 flex-col items-start text-left mt-4 p-4\">\n        <h1 className=\"text-base font-bold -mb-1\">Registrerte tiltak</h1>\n        <div>\n          <div>Arbeidstrening</div>\n          <div>Oslo kommune Bydel X</div>\n          <div>15.03.22-31.08.22</div>\n          <div>60% - 3 dager</div>\n          <div>\n            Status: <span className=\"font-bold\">Gjennomføres</span>\n          </div>\n        </div>\n        <div>\n          <div>Arbeidstrening</div>\n          <div>Oslo kommune Bydel X</div>\n          <div>15.03.22-31.08.22</div>\n          <div>60% - 3 dager</div>\n          <div>\n            Status: <span className=\"font-bold\">Gjennomføres</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LeftSidebar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Breadcrumbs from '../components/Breadcrumbs';\nimport Timelines from '../components/timeline/Timelines';\nimport { Soknad } from '../api/soknad';\nimport LeftSidebar from './person/LeftSidebar';\n\nexport const SoknadContext = React.createContext({\n  soknad: undefined as undefined | Soknad,\n});\n\nconst DetailsPage = () => {\n  return (\n    <div className=\"flex flex-col\">\n      <Breadcrumbs />\n      <Timelines />\n      <div className=\"grid grid-cols-12 flex-1\">\n        <div className=\"col-span-2 border-r border-sky-400\">\n          <LeftSidebar />\n        </div>\n        <div className=\"col-span-8 col-start-3\">\n          <Outlet />\n        </div>\n        <div className=\"col-span-2 border-l border-gray-200 flex flex-col p-8\">\n          <span className=\"border-b border-gray-200\">Historikk?</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailsPage;\n","import React from 'react';\n\ninterface Utbetaling {\n  date: string;\n  grad: number;\n  amount: number;\n  merknad: string | undefined;\n}\n\nconst utbetalinger: Utbetaling[] = [\n  { date: '20.12.2021', grad: 100, amount: 255, merknad: undefined },\n  { date: '19.12.2021', grad: 100, amount: 255, merknad: undefined },\n  { date: '18.12.2021', grad: 100, amount: 255, merknad: undefined },\n  { date: '17.12.2021', grad: 50, amount: 127, merknad: undefined },\n];\n\nconst PaymentsTable = () => {\n  const total = utbetalinger.reduce((acc, next) => acc + next.amount, 0);\n\n  return (\n    <div className=\"mt-8 m-4\">\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"border-b border-black\">\n            <th className=\"min-h-full w-28\">Dato</th>\n            <th className=\"min-h-full w-28\">Utbet.dager</th>\n            <th className=\"min-h-full w-28\">Grad</th>\n            <th className=\"min-h-full w-28\">Utbetaling</th>\n            <th className=\"min-h-full w-28\">Merknader</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"border-b border-black\">\n            <td>TOTAL</td>\n            <td>2 dager</td>\n            <td>Grad</td>\n            <td>{total},-</td>\n          </tr>\n          {utbetalinger.map((utbetaling, index) => (\n            <tr className=\"border-b border-gray-200\" key={index}>\n              <td>{utbetaling.date}</td>\n              <td>Tiltak</td>\n              <td>{utbetaling.grad}</td>\n              <td>{utbetaling.amount}</td>\n              <td>{utbetaling.merknad}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PaymentsTable;\n","import React from 'react';\nimport { HTTP, useRequest } from '../api/common';\n\nconst Good = () => <div className=\"w-4 h-4 m-2 bg-green-200 rounded-full\" />;\nconst Bad = () => <div className=\"w-4 h-4 m-2 bg-red-200 rounded-full\" />;\n\nconst TestPage = () => {\n  const {\n    run: testReq,\n    error: testError,\n    isLoading: testLoading,\n  } = useRequest(() => HTTP.GET('/api/test'));\n  const {\n    run: authReq,\n    error: authError,\n    isLoading: authLoading,\n  } = useRequest(() => HTTP.GET('/api/application'));\n  const {\n    run: tokenxReq,\n    error: tokenxError,\n    isLoading: tokenxLoading,\n  } = useRequest(() => HTTP.GET('/api/tokenx'));\n  const {\n    run: serviceTokenReq,\n    error: serviceTokenError,\n    isLoading: serviceTokenLoading,\n  } = useRequest(() => HTTP.GET('/api/servicetoken'));\n\n  return (\n    <div>\n      <div className=\"flex items-center\">\n        {testError ? <Bad /> : <Good />}\n        <button\n          disabled={testLoading}\n          onClick={testReq}\n          className=\"rounded p-4 bg-gray-100 border border-gray-200 mt-4\"\n        >\n          Ping backend\n        </button>\n        {authError ? <Bad /> : <Good />}\n        <button\n          disabled={authLoading}\n          onClick={authReq}\n          className=\"rounded p-4 bg-gray-100 border border-gray-200 mt-4\"\n        >\n          Ping backend auth\n        </button>\n        {tokenxError ? <Bad /> : <Good />}\n        <button\n          disabled={tokenxLoading}\n          onClick={tokenxReq}\n          className=\"rounded p-4 bg-gray-100 border border-gray-200 mt-4\"\n        >\n          On behalf of flow\n        </button>\n        {serviceTokenError ? <Bad /> : <Good />}\n        <button\n          disabled={serviceTokenLoading}\n          onClick={serviceTokenReq}\n          className=\"rounded p-4 bg-gray-100 border border-gray-200 mt-4\"\n        >\n          Get servicetoken\n        </button>\n      </div>\n      <div className=\"flex border p-4 border-sky-400 rounded m-4 min-h-4\">\n        {JSON.stringify(tokenxError) || 'No message'}\n      </div>\n    </div>\n  );\n};\n\nexport default TestPage;\n","import React from 'react';\n\nconst BarneTillegg = () => {\n  return <div>Barnetillegg</div>;\n};\n\nexport default BarneTillegg;\n","import { atom } from 'recoil';\nimport { Soknad } from '../api/soknad';\n\nexport const soknadState = atom<Soknad[] | undefined>({\n  key: 'soknader',\n  default: undefined,\n});\n","import React, { FC } from 'react';\nimport { FileContent, Calender } from '@navikt/ds-icons';\nimport { useRecoilState } from 'recoil';\nimport { soknadState } from '../../state/soknad';\nimport { useParams } from 'react-router-dom';\nimport { format } from '../../util/dateFormatting';\n\nconst posts = [\n  {\n    title: 'Tiltak',\n    text: 'Gruppe AMO\\n' + 'Kunnskapsfabrukken AS\\n',\n  },\n  {\n    title: 'Kvalifiseringsprogrammet',\n    text: 'Nei',\n  },\n  {\n    title: 'Opphold på instutisjon',\n    text: 'Barnevernsinstitusjon',\n  },\n];\n\nconst ContentSection: FC<{ title: string }> = ({ title, children }) => {\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-base text-left text-gray-300 border-b border-gray-200\">\n        {title}\n      </h1>\n      {children}\n    </div>\n  );\n};\n\nconst SoknadContent = () => {\n  const [soknader] = useRecoilState(soknadState);\n  const { soknadId } = useParams<{ soknadId: string }>();\n  const soknad = soknader?.find((s) => s.id === soknadId);\n\n  const start =\n    soknad?.brukerRegistrertStartDato || soknad?.systemRegistrertStartDato;\n  const slutt =\n    soknad?.brukerRegistrertSluttDato || soknad?.systemRegistrertSluttDato;\n\n  return (\n    <div className=\"\">\n      <div className=\"flex space-x-12 text-base mb-8 p-4\">\n        <div className=\"flex items-center space-x-2\">\n          <FileContent />\n          <div>{`Soknadsdato ${format(soknad?.opprettet, 'dd.mm.y')}`}</div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Calender />\n          <div>{`Søknadsperiode ${format(start, 'dd.MM.y')}-${format(\n            slutt,\n            'dd.MM.y'\n          )}`}</div>\n        </div>\n      </div>\n      <ul className=\"flex flex-wrap m-0\">\n        {posts.map(({ text, title }, i) => (\n          <div key={i} className=\"m-4\">\n            <h1 className=\"text-base text-left text-gray-300\">{title}</h1>\n            <pre className=\"font-sans text-base font-bold text-left\">\n              {text}\n            </pre>\n          </div>\n        ))}\n      </ul>\n      <ContentSection title={'Andre utbetalinger'}>\n        <ul className=\"flex\">\n          <li className=\"flex flex-col text-left font-bold text-base\">\n            <div>KLP</div>\n            <div>100%</div>\n            <div>11.06.2021-10.06.31</div>\n          </li>\n        </ul>\n      </ContentSection>\n      <ContentSection title={'Barnetillegg'}>\n        <ul className=\"flex\">\n          <li className=\"flex flex-col text-left font-bold text-base\">\n            <div>Vindfrøy Frøys (5)</div>\n            <div>123456 78901</div>\n          </li>\n        </ul>\n      </ContentSection>\n      <ContentSection title={'Tilleggsopplysninger'}>\n        <div className=\"text-base text-left font-bold\">\n          Jeg har søkt om penger til et annet tiltak også.\n        </div>\n      </ContentSection>\n    </div>\n  );\n};\n\nexport default SoknadContent;\n","import React, { useEffect } from 'react';\nimport { useRequest } from '../../api/common';\nimport { getSoknader, Soknad } from '../../api/soknad';\nimport { Link, useParams } from 'react-router-dom';\nimport { personPath } from '../../routes';\nimport { useRecoilState } from 'recoil';\nimport { soknadState } from '../../state/soknad';\n\nconst SoknadListe = () => {\n  const { fnr, soknadId } = useParams<{ fnr: string; soknadId: string }>();\n  const {\n    run: runGetSoknader,\n    result,\n    isLoading,\n  } = useRequest(() => getSoknader(fnr || ''));\n\n  useEffect(() => {\n    runGetSoknader();\n  }, []);\n\n  const [soknader, setSoknader] = useRecoilState(soknadState);\n\n  useEffect(() => {\n    if (!result) return;\n    setSoknader(result?.data || []);\n  }, [result]);\n\n  const isSelected = (soknad: Soknad): boolean =>\n    soknad.id?.toString() === soknadId?.toString();\n\n  return (\n    <ul className=\"flex border-b border-gray-200\">\n      {(soknader || []).map((soknad, i) => (\n        <li\n          key={i}\n          className={`flex px-4 mx-4 border-b-4 text-center hover:border-blue-200 ${\n            isSelected(soknad) ? ' border-blue-400 ' : ' border-gray-100 '\n          }`}\n        >\n          <Link\n            className={'flex-1 p-2 text-center text-base font-bold text-black'}\n            to={personPath({\n              fnr: soknad.ident,\n              soknadId: soknad.id.toString(),\n            })}\n          >{`${soknad.fornavn} ${soknad.etternavn}`}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SoknadListe;\n","import React, { useEffect, useState } from 'react';\nimport { Alert } from '@navikt/ds-react';\nimport Spinner from '../../components/Spinner';\n\nconst YtelserSection = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  });\n\n  return (\n    <div className=\"w-96\">\n      <Spinner isLoading={isLoading}>\n        <Alert variant=\"info\">\n          Vi viser foreløpig kun informasjon om ytelser fra Arena innenfor\n          søknadsperioden\n        </Alert>\n        <h1 className=\"ml-8 mt-4 text-left font-bold text-lg\">Ytelser</h1>\n        <div className=\"text-left pl-8 text-base space-y-6\">\n          <div>\n            <div className=\"text-gray-300\">Arbeidsavklaringspenger</div>\n            <div className=\"font-bold\">Nei</div>\n          </div>\n          <div>\n            <div className=\"text-gray-300\">Dagpenger</div>\n            <div className=\"font-bold\">01.10.21-15.12.21</div>\n          </div>\n          <div>\n            <div className=\"text-gray-300\">Tiltakspenger</div>\n            <div className=\"font-bold\">Nei</div>\n          </div>\n        </div>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default YtelserSection;\n","import React, { useEffect, useState } from 'react';\nimport BarneTillegg from './BarneTillegg';\nimport Spinner from '../../components/Spinner';\nimport SoknadContent from './SoknadContent';\nimport SoknadListe from './SoknadListe';\nimport { Alert } from 'antd';\nimport YtelserSection from './YtelserSection';\n\nconst Content = () => {\n  const [tab, setTab] = useState('vilkår');\n\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-strech \">\n      <div className=\"self-stretch flex mb-16\">\n        <YtelserSection />\n        {tab == 'vilkår' && (\n          <div className=\"border-l border-gray-200 flex flex-col flex-1\">\n            <Spinner isLoading={isLoading}>\n              <SoknadListe />\n              <SoknadContent />\n            </Spinner>\n          </div>\n        )}\n        {tab == 'barnetillegg' && <BarneTillegg />}\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import { Route, Routes } from 'react-router-dom';\nimport ApplicationListPage from './pages/soknadList/ApplicationListPage';\nimport DetailsPage from './pages/DetailsPage';\nimport PaymentsTable from './pages/person/PaymentsTable';\nimport TestPage from './pages/TestPage';\nimport React from 'react';\nimport Content from './pages/person/Content';\n\nexport const basePath = import.meta.env.BASE_URL || '/';\n\nexport const soknadPath = (soknadId: string) => `${basePath}soknad/${soknadId}`;\nexport const personPath = ({\n  fnr,\n  soknadId,\n}: {\n  fnr: string;\n  soknadId: string;\n}) => `${basePath}person/${fnr}/soknad/${soknadId}`;\n\nexport const paths = {\n  ApplicationPage: `${basePath}`,\n  DetailsPage: `${basePath}person/:fnr/*`,\n  PaymentsTable: 'payment/:paymentId',\n  Content: 'soknad/:soknadId',\n  DetailsFallback: '*',\n  Test: '/test',\n};\n\nexport const AppRoutes = () => {\n  return (\n    <Routes>\n      <Route path={paths.ApplicationPage} element={<ApplicationListPage />} />\n      <Route path={paths.DetailsPage} element={<DetailsPage />}>\n        <Route path={paths.PaymentsTable} element={<PaymentsTable />} />\n        <Route path={paths.Content} element={<Content />} />\n        <Route path={paths.DetailsFallback} element={<Content />} />\n      </Route>\n      <Route path={paths.Test} element={<TestPage />} />\n    </Routes>\n  );\n};\n\nexport default AppRoutes;\n","import { Dropdown, Header } from '@navikt/ds-react-internal';\nimport { ExternalLink, System } from '@navikt/ds-icons';\nimport React from 'react';\nimport { SearchBar } from './SearchBar';\nimport { useAddAlert, useRemoveAlert } from '../state/alerts';\nimport { isValidFnr } from './fnrValidation';\nimport { useNavigate } from 'react-router-dom';\nimport { basePath } from '../routes';\n\nconst Navbar = () => {\n  const addAlert = useAddAlert();\n  const removeAlert = useRemoveAlert();\n  const navigate = useNavigate();\n  const goToHome = () => navigate(basePath);\n\n  const onSearch = async (personId: string): Promise<void> => {\n    const key = 'ugyldig-søk';\n    removeAlert(key);\n\n    if (!isValidFnr(personId)) {\n      addAlert({\n        key: key,\n        message: `\"${personId}\" er ikke en gyldig aktør-ID/fødselsnummer.`,\n        type: 'error',\n        ephemeral: true,\n      });\n      return;\n    } else {\n      navigate(`/person/${personId}`);\n      return;\n    }\n  };\n\n  return (\n    <Header>\n      <Header.Title onClick={goToHome} className=\"cursor-pointer\">\n        NAV tiltakspenger\n      </Header.Title>\n      <SearchBar onSearch={onSearch} />\n      <Dropdown>\n        <Header.Button as={Dropdown.Toggle} style={{ marginLeft: 'auto' }}>\n          <System title=\"Systemer og oppslagsverk\" />\n        </Header.Button>\n        <Dropdown.Menu>\n          <Dropdown.Menu.List>\n            <Dropdown.Menu.List.Item>\n              <a\n                className=\"flex\"\n                href=\"https://arbeid-og-inntekt.nais.adeo.no/api/v2/redirect/sok/a-inntekt\"\n              >\n                <span className=\"mr-2\">A-inntekt</span>\n                <ExternalLink />\n              </a>\n            </Dropdown.Menu.List.Item>\n            <Dropdown.Menu.List.Item>\n              <a className=\"flex\" href=\"https://gosys.intern.nav.no/gosys\">\n                <span className=\"mr-2\">Gosys</span>\n                <ExternalLink />\n              </a>\n            </Dropdown.Menu.List.Item>\n          </Dropdown.Menu.List>\n        </Dropdown.Menu>\n      </Dropdown>\n      <Header.User name=\"Sylte Agurk\" />\n    </Header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { ErrorFilled } from '@navikt/ds-icons';\nimport { InformationFilled } from '@navikt/ds-icons';\nimport { SuccessFilled } from '@navikt/ds-icons';\nimport { WarningFilled } from '@navikt/ds-icons';\nimport { useRecoilState } from 'recoil';\nimport { alertsState } from '../state/alerts';\n\ntype WarningType = 'info' | 'success' | 'warning' | 'error';\nconst classnameAll = 'flex  pl-6 py-1 border';\n\nexport const classname = (warningtype: WarningType) => {\n  switch (warningtype) {\n    case 'success':\n      return classnameAll + ' border-green-400 bg-green-100';\n    case 'info':\n      return classnameAll + ' border-blue-400 bg-blue-100 ';\n    case 'warning':\n      return classnameAll + ' border-amber-400 bg-amber-100';\n    case 'error':\n      return classnameAll + ' border-red-400 bg-red-100';\n  }\n};\n\nexport const icon = (icontype: WarningType) => {\n  switch (icontype) {\n    case 'success':\n      return (\n        <SuccessFilled\n          aria-label=\"Systemikon suksess\"\n          fontSize=\"28\"\n          className=\"text-green-400\"\n        />\n      );\n    case 'info':\n      return (\n        <InformationFilled\n          aria-label=\"Systemikon informasjon\"\n          fontSize=\"28\"\n          className=\"text-blue-400\"\n        />\n      );\n    case 'warning':\n      return (\n        <WarningFilled\n          aria-label=\"Systemikon advarsel\"\n          fontSize=\"28\"\n          className=\"text-amber-400\"\n        />\n      );\n    case 'error':\n      return (\n        <ErrorFilled\n          aria-label=\"Systemikon feil\"\n          fontSize=\"28\"\n          className=\"text-red-400\"\n        />\n      );\n  }\n};\n\nconst InfoMessage = () => {\n  const [alerts] = useRecoilState(alertsState);\n\n  return (\n    <div>\n      {alerts.map(({ key, type, message }) => (\n        <div key={key} className={classname(type)}>\n          {icon(type)}\n          <span className=\"pl-4\">{message}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default InfoMessage;\n","export default {\n  data: [\n    {\n      id: '136950219',\n      fornavn: 'EVANS',\n      etternavn: 'HILPERT',\n      ident: '02079538755',\n      opprettet: '2022-03-10T10:03:35.365',\n      brukerRegistrertStartDato: '2022-02-01',\n      brukerRegistrertSluttDato: '2022-07-31',\n      systemRegistrertStartDato: null,\n      systemRegistrertSluttDato: null,\n    },\n    {\n      id: '136950210',\n      fornavn: 'Liten',\n      etternavn: 'Salat',\n      ident: '14038205537',\n      opprettet: '2022-03-11T10:03:35.365',\n      brukerRegistrertStartDato: '2022-03-11',\n      brukerRegistrertSluttDato: '2022-03-11',\n      systemRegistrertStartDato: null,\n      systemRegistrertSluttDato: null,\n    },\n  ],\n  total: 2,\n  pageSize: 2,\n  offset: 0,\n};\n","export default [{}];\n","export default {\n  fnr: '12121212121',\n  fornavn: 'Taremel',\n  etternavn: 'Sløv',\n};\n","import soknadByIdent from './soknadByIdent';\nimport payments from './payments';\nimport person from './person';\n\nconst mockData: Record<string, object | object[]> = {\n  '/api/soknad': soknadByIdent,\n  '/api/payments': payments,\n  '/api/person': person,\n};\nexport default mockData;\n","import {\n  defaultContext,\n  ResponseResolver,\n  ResponseTransformer,\n  rest,\n} from 'msw';\nimport mockData from './index';\nimport { MockedRequest } from 'msw/lib/types/handlers/RequestHandler';\n\ntype CtxWithJson<T> = typeof defaultContext & {\n  json: (data: T) => ResponseTransformer;\n};\n\ntype MockedRequestWithParams = MockedRequest & {\n  params: Record<string, string>;\n};\n\ninterface ErrorMessage {\n  error: string;\n  message: string;\n}\n\nconst wait = (ms: number): Promise<void> => {\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      resolve(undefined);\n    }, ms);\n  });\n};\n\nconst resolveWith =\n  <T>(\n    data: T\n  ): ResponseResolver<MockedRequest, CtxWithJson<T | ErrorMessage>> =>\n  async (req, res, ctx) => {\n    await wait(500);\n    if ((req as MockedRequestWithParams)?.params?.soknadId == '11710') {\n      return res(\n        ctx.status(404),\n        ctx.json({\n          error: 'NOT_FOUND',\n          message: 'Fant ikke soknad med id 11710',\n        })\n      );\n    }\n    return res(ctx.status(200), ctx.json(data));\n  };\n\nexport const getMockHandlers = () => {\n  return Object.entries(mockData).map(([path, data]) => {\n    return rest.get(path, resolveWith(data));\n  });\n};\n","import { setupWorker } from 'msw';\nimport { getMockHandlers } from './handlers';\nimport { basePath } from '../routes';\n\nexport const mockHttp = () => {\n  const worker = setupWorker(...getMockHandlers());\n  return worker.start({\n    serviceWorker: {\n      url: basePath + 'mockServiceWorker.js',\n    },\n  });\n};\n","import React from 'react';\nimport '@navikt/ds-css';\nimport '@navikt/ds-css-internal';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport Navbar from './components/Navbar';\nimport InfoMessage from './components/InfoMessage';\nimport AppRoutes from './routes';\nimport { mockHttp } from './mocks/browser';\n\nif (import.meta.env.MODE === 'mock') {\n  mockHttp();\n}\n\nfunction App() {\n  return (\n    <Router>\n      <RecoilRoot>\n        <div className=\"App\">\n          <Navbar />\n          <InfoMessage />\n          <AppRoutes />\n        </div>\n      </RecoilRoot>\n    </Router>\n  );\n}\n\nexport default App;\n","const scriptRel = 'modulepreload';const seen = {};const base = '/tpts-tiltakspenger-flate/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["SearchBar","onSearch","value","setValue","useState","search","length","replace","then","onKeyPress","event","key","onChange","target","atom","selector","useSetRecoilState","selectedClass","children","selected","onClick","className","onTabChange","defaultValue","isFirst","setIsFirst","getValueByIndex","index","props","selectedIndex","findIndex","child","React","Children","map","cloneElement","anyChild","Tag","Behandling","shortNames","text","BehandlingsTag","behandling","Periode","datoer","fom","tom","dateFnsFormat","isValidErrorCode","code","ErrorPage","errorCode","message","status","Spinner","isLoading","processedFilter","soknad","unProcessedFilter","soknadStates","Behandlet","Avslag","ApplicationListPage","currentTab","setTab","run","runGetSoknader","result","soknader","error","useRequest","getSoknader","applications","data","type","ForsteGang","periode","brukerRegistrertStartDato","brukerRegistrertSluttDato","filter","navigate","useNavigate","handleClick","soknadId","fnr","personPath","undefined","pageSize","ident","toString","id","CopyableText","copyToClipboard","clipboard","writeText","Breadcrumbs","TimelineLabel","label","TimeLineType","colors","Timeline","style","TimeLabels","months","month","Timelines","onClickTimeline","setSelected","location","useLocation","Number","isInteger","parseInt","pathname","SOKNAD","width","VEDTAK","marginLeft","LeftSidebar","Forlengelse","createContext","DetailsPage","utbetalinger","date","grad","amount","merknad","PaymentsTable","total","reduce","acc","next","utbetaling","Good","Bad","TestPage","testReq","testError","testLoading","HTTP","GET","authReq","authError","authLoading","tokenxReq","tokenxError","tokenxLoading","serviceTokenReq","serviceTokenError","serviceTokenLoading","JSON","stringify","BarneTillegg","posts","title","ContentSection","SoknadContent","useRecoilState","soknadState","useParams","find","s","start","systemRegistrertStartDato","slutt","systemRegistrertSluttDato","format","opprettet","i","SoknadListe","setSoknader","isSelected","fornavn","etternavn","YtelserSection","setIsLoading","Content","tab","basePath","import","paths","ApplicationPage","DetailsFallback","Test","AppRoutes","Navbar","addAlert","useAddAlert","removeAlert","useRemoveAlert","goToHome","personId","isValidFnr","ephemeral","Dropdown","Toggle","classnameAll","classname","warningtype","icon","icontype","InfoMessage","alerts","alertsState","Router","RecoilRoot","ReactDOM","render","document","getElementById","reportWebVitals"],"mappings":"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"}