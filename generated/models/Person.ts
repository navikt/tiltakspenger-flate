/* tslint:disable */
/* eslint-disable */
/**
 * Vedtak API
 * API for vedtak
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Behandling } from './Behandling';
import {
    BehandlingFromJSON,
    BehandlingFromJSONTyped,
    BehandlingToJSON,
} from './Behandling';
import type { Personalia } from './Personalia';
import {
    PersonaliaFromJSON,
    PersonaliaFromJSONTyped,
    PersonaliaToJSON,
} from './Personalia';

/**
 * 
 * @export
 * @interface Person
 */
export interface Person {
    /**
     * 
     * @type {Array<Behandling>}
     * @memberof Person
     */
    behandlinger: Array<Behandling>;
    /**
     * 
     * @type {Personalia}
     * @memberof Person
     */
    personalia: Personalia;
}

/**
 * Check if a given object implements the Person interface.
 */
export function instanceOfPerson(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "behandlinger" in value;
    isInstance = isInstance && "personalia" in value;

    return isInstance;
}

export function PersonFromJSON(json: any): Person {
    return PersonFromJSONTyped(json, false);
}

export function PersonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Person {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'behandlinger': ((json['behandlinger'] as Array<any>).map(BehandlingFromJSON)),
        'personalia': PersonaliaFromJSON(json['personalia']),
    };
}

export function PersonToJSON(value?: Person | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'behandlinger': ((value.behandlinger as Array<any>).map(BehandlingToJSON)),
        'personalia': PersonaliaToJSON(value.personalia),
    };
}

