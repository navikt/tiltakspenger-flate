/* tslint:disable */
/* eslint-disable */
/**
 * Vedtak API
 * API for vedtak
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PeriodeDTO,
    PeriodeDTOFromJSON,
    PeriodeDTOFromJSONTyped,
    PeriodeDTOToJSON,
} from './PeriodeDTO';
import {
    TiltakDTO,
    TiltakDTOFromJSON,
    TiltakDTOFromJSONTyped,
    TiltakDTOToJSON,
} from './TiltakDTO';
import {
    VilkarsVurderingsKategori,
    VilkarsVurderingsKategoriFromJSON,
    VilkarsVurderingsKategoriFromJSONTyped,
    VilkarsVurderingsKategoriToJSON,
} from './VilkarsVurderingsKategori';

/**
 * 
 * @export
 * @interface BehandlingDTO
 */
export interface BehandlingDTO {
    /**
     * 
     * @type {string}
     * @memberof BehandlingDTO
     */
    id: string;
    /**
     * 
     * @type {PeriodeDTO}
     * @memberof BehandlingDTO
     */
    periode: PeriodeDTO;
    /**
     * 
     * @type {object}
     * @memberof BehandlingDTO
     */
    sknad: object;
    /**
     * 
     * @type {TiltakDTO}
     * @memberof BehandlingDTO
     */
    tiltak: TiltakDTO;
    /**
     * 
     * @type {Array<VilkarsVurderingsKategori>}
     * @memberof BehandlingDTO
     */
    vurderinger: Array<VilkarsVurderingsKategori>;
}

export function BehandlingDTOFromJSON(json: any): BehandlingDTO {
    return BehandlingDTOFromJSONTyped(json, false);
}

export function BehandlingDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): BehandlingDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'periode': PeriodeDTOFromJSON(json['periode']),
        'sknad': json['søknad'],
        'tiltak': TiltakDTOFromJSON(json['tiltak']),
        'vurderinger': ((json['vurderinger'] as Array<any>).map(VilkarsVurderingsKategoriFromJSON)),
    };
}

export function BehandlingDTOToJSON(value?: BehandlingDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'periode': PeriodeDTOToJSON(value.periode),
        'søknad': value.sknad,
        'tiltak': TiltakDTOToJSON(value.tiltak),
        'vurderinger': ((value.vurderinger as Array<any>).map(VilkarsVurderingsKategoriToJSON)),
    };
}

