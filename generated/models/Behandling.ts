/* tslint:disable */
/* eslint-disable */
/**
 * Vedtak API
 * API for vedtak
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Periode } from './Periode';
import {
    PeriodeFromJSON,
    PeriodeFromJSONTyped,
    PeriodeToJSON,
} from './Periode';
import type { Tiltak } from './Tiltak';
import {
    TiltakFromJSON,
    TiltakFromJSONTyped,
    TiltakToJSON,
} from './Tiltak';
import type { VilkarsVurderingsKategori } from './VilkarsVurderingsKategori';
import {
    VilkarsVurderingsKategoriFromJSON,
    VilkarsVurderingsKategoriFromJSONTyped,
    VilkarsVurderingsKategoriToJSON,
} from './VilkarsVurderingsKategori';

/**
 * 
 * @export
 * @interface Behandling
 */
export interface Behandling {
    /**
     * 
     * @type {string}
     * @memberof Behandling
     */
    id: string;
    /**
     * 
     * @type {Periode}
     * @memberof Behandling
     */
    periode: Periode;
    /**
     * 
     * @type {object}
     * @memberof Behandling
     */
    søknad: object;
    /**
     * 
     * @type {Tiltak}
     * @memberof Behandling
     */
    tiltak: Tiltak;
    /**
     * 
     * @type {Array<VilkarsVurderingsKategori>}
     * @memberof Behandling
     */
    vurderinger: Array<VilkarsVurderingsKategori>;
}

/**
 * Check if a given object implements the Behandling interface.
 */
export function instanceOfBehandling(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "periode" in value;
    isInstance = isInstance && "søknad" in value;
    isInstance = isInstance && "tiltak" in value;
    isInstance = isInstance && "vurderinger" in value;

    return isInstance;
}

export function BehandlingFromJSON(json: any): Behandling {
    return BehandlingFromJSONTyped(json, false);
}

export function BehandlingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Behandling {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'periode': PeriodeFromJSON(json['periode']),
        'søknad': json['søknad'],
        'tiltak': TiltakFromJSON(json['tiltak']),
        'vurderinger': ((json['vurderinger'] as Array<any>).map(VilkarsVurderingsKategoriFromJSON)),
    };
}

export function BehandlingToJSON(value?: Behandling | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'periode': PeriodeToJSON(value.periode),
        'søknad': value.søknad,
        'tiltak': TiltakToJSON(value.tiltak),
        'vurderinger': ((value.vurderinger as Array<any>).map(VilkarsVurderingsKategoriToJSON)),
    };
}

