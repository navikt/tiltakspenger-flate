{"version":3,"sources":["components/BehandlingsTag.tsx","components/Table.tsx","components/Tabs.tsx","components/Tag.tsx","pages/ApplicationListPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Behandling","Table","data","columns","map","column","index","className","name","row","key","Tab","children","selected","onClick","role","Tabs","onTabChange","useState","selectedIndex","setIndex","useEffect","React","Children","child","cloneElement","Tag","shortNames","FørsteGang","Forlengelse","ForlengelseIT","Revurdering","Klage","Stikkprøve","QA","BehandlingsTag","behandling","dataElement","created","treatmentType","applicant","tiltaksplass","period","status","ApplicationListPage","App","Header","Title","href","User","style","marginLeft","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf7a0ef3.chunk.js","sourcesContent":["import Tag from './Tag';\nimport React, { FC } from 'react';\n\nexport enum Behandling {\n  FørsteGang,\n  Forlengelse,\n  ForlengelseIT,\n  Revurdering,\n  Klage,\n  Stikkprøve,\n  QA,\n}\n\nconst shortNames = {\n  [Behandling.FørsteGang]: 'F',\n  [Behandling.Forlengelse]: 'FL',\n  [Behandling.ForlengelseIT]: 'FI',\n  [Behandling.Revurdering]: 'R',\n  [Behandling.Klage]: 'K',\n  [Behandling.Stikkprøve]: 'S',\n  [Behandling.QA]: 'QA',\n};\n\nconst BehandlingsTag: FC<{ behandling: Behandling }> = ({ behandling }) => {\n  return (\n    <div className=\"flex\">\n      <Tag>{shortNames[behandling]}</Tag>\n    </div>\n  );\n};\n\nexport default BehandlingsTag;\n","import React from 'react';\n\ninterface Column<Values> {\n  name: string;\n  key: Values;\n}\n\ninterface Props<T> {\n  data: T[];\n  columns: Column<keyof T>[];\n}\n\nconst Table = <T extends {}>({ data, columns }: Props<T>) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {columns.map((column, index) => (\n            <th key={index} className=\"first:pl-16 text-left pr-40 h-32\">\n              {column.name}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, index) => (\n          <tr\n            key={index}\n            className=\"text-left h-32 odd:bg-gray-100 border-t-2 last:border-b-2 border-gray-200\"\n          >\n            {columns.map((column, index) => (\n              <td key={index} className=\"first:pl-16 pr-40\">\n                {row[column.key]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { FC, useEffect, useState } from 'react';\n\nconst selectedClass = 'border-opacity-100';\ninterface TabProps {\n  selected?: boolean;\n  onClick?: () => void;\n}\n\nexport const Tab: FC<TabProps> = ({ children, selected, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={`p-16 font-bold hover:bg-gray-100 border-b-4 border-blue-400 border-opacity-0 ${\n        selected ? selectedClass : ''\n      }`}\n      role=\"tab\"\n    >\n      {children}\n    </button>\n  );\n};\n\ninterface TabsProps {\n  onTabChange?: (tabIndex: number) => {};\n}\nexport const Tabs: FC<TabsProps> = ({ children, onTabChange }) => {\n  const [selectedIndex, setIndex] = useState(0);\n\n  useEffect(() => {\n    onTabChange?.(selectedIndex);\n  }, [onTabChange, selectedIndex]);\n\n  return (\n    <div role=\"tablist\">\n      {React.Children.map(children, (child, index) => {\n        return React.cloneElement(child as any, {\n          selected: selectedIndex === index,\n          onClick: () => setIndex(index),\n        });\n      })}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\nconst Tag: FC = ({ children }) => {\n  return (\n    <div className=\"border border-purple-200 bg-purple-100 rounded text-xs font-bold px-2\">\n      {children}\n    </div>\n  );\n};\n\nexport default Tag;\n","import React from 'react';\nimport Table from '../components/Table';\nimport { Tab, Tabs } from '../components/Tabs';\nimport BehandlingsTag, { Behandling } from '../components/BehandlingsTag';\n\nconst dataElement = {\n  created: '02.02.2020',\n  treatmentType: <BehandlingsTag behandling={Behandling.Klage} />,\n  applicant: 'Sigurd Grøneng',\n  tiltaksplass: 'Påmeldt',\n  period: '01.12.2021-15.06.2021',\n  status: '',\n};\n\nconst data = [dataElement, dataElement, dataElement, dataElement, dataElement];\n\nconst columns: any = [\n  { key: 'created', name: 'Opprettet' },\n  { key: 'treatmentType', name: 'Behandlingstype' },\n  { key: 'applicant', name: 'Søker' },\n  { key: 'tiltaksplass', name: 'Tiltaksplass' },\n  { key: 'period', name: 'Periode' },\n  { key: 'status', name: 'Status' },\n];\n\nconst ApplicationListPage = () => {\n  return (\n    <div>\n      <h1>Liste over søknader</h1>\n      <div className=\"flex flex-col items-start p-40\">\n        <div className=\"self-stretch flex border-b-2 border-gray-200 mb-16\">\n          <Tabs>\n            <Tab>Ikke behandlet</Tab>\n            <Tab>Behandlet</Tab>\n          </Tabs>\n        </div>\n        <Table columns={columns} data={data} />\n      </div>\n    </div>\n  );\n};\n\nexport default ApplicationListPage;\n","import React from 'react';\nimport '@navikt/ds-css';\nimport '@navikt/ds-css-internal';\nimport './App.css';\nimport { Header } from '@navikt/ds-react-internal';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ApplicationListPage from './pages/ApplicationListPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header>\n          <Header.Title href=\"/#home\">NAV TPTS</Header.Title>\n          <Header.User name=\"Kong Harald\" style={{ marginLeft: 'auto' }} />\n        </Header>\n        <Routes>\n          <Route path={'/'} element={<ApplicationListPage />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}