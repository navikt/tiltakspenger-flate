{"version":3,"sources":["components/Table.tsx","pages/ApplicationListPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BehandlingsTag","className","Table","data","columns","map","column","index","name","row","key","dataElement","created","treatmentType","applicant","tiltaksplass","period","status","ApplicationListPage","App","Header","Title","href","User","style","marginLeft","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAYMA,EAAiB,WACrB,OACE,qBAAKC,UAAU,iGAAf,gBAwCWC,EAlCD,YAAgD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QACnC,OACE,wBAAOH,UAAU,QAAjB,UACE,gCACE,6BACGG,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,oBAAgBN,UAAU,mCAA1B,SACGK,EAAOE,MADDD,UAMf,gCACGJ,EAAKE,KAAI,SAACI,EAAKF,GAAN,OACR,oBAEEN,UAAU,4EAFZ,SAIGG,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,oBAAgBN,UAAU,oBAA1B,SACkB,kBAAfK,EAAOI,IACN,cAAC,EAAD,IAEAD,EAAIH,EAAOI,MAJNH,OAJNA,YChCXI,EAAc,CAClBC,QAAS,aACTC,cAAe,IACfC,UAAW,oBACXC,aAAc,aACdC,OAAQ,wBACRC,OAAQ,IAGJd,EAAO,CAACQ,EAAaA,EAAaA,EAAaA,EAAaA,GAE5DP,EAAe,CACnB,CAAEM,IAAK,UAAWF,KAAM,aACxB,CAAEE,IAAK,gBAAiBF,KAAM,mBAC9B,CAAEE,IAAK,YAAaF,KAAM,YAC1B,CAAEE,IAAK,eAAgBF,KAAM,gBAC7B,CAAEE,IAAK,SAAUF,KAAM,WACvB,CAAEE,IAAK,SAAUF,KAAM,WAYVU,EATa,WAC1B,OACE,gCACE,wDACA,cAAC,EAAD,CAAOd,QAASA,EAASD,KAAMA,QCHtBgB,MAhBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKlB,UAAU,MAAf,UACE,eAACmB,EAAA,EAAD,WACE,cAACA,EAAA,EAAOC,MAAR,CAAcC,KAAK,SAAnB,sBACA,cAACF,EAAA,EAAOG,KAAR,CAAaf,KAAK,cAAcgB,MAAO,CAAEC,WAAY,aAEvD,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,EAAD,cCHtBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.718f7580.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Column<Values> {\n  name: string;\n  key: Values;\n}\n\ninterface Props<T> {\n  data: T[];\n  columns: Column<keyof T>[];\n}\n\nconst BehandlingsTag = () => {\n  return (\n    <div className=\"h-20 w-20 flex justify-center border border-purple-200 bg-purple-100 rounded text-xs font-bold\">\n      F\n    </div>\n  );\n};\n\nconst Table = <T extends {}>({ data, columns }: Props<T>) => {\n  return (\n    <table className=\"ml-40\">\n      <thead>\n        <tr>\n          {columns.map((column, index) => (\n            <th key={index} className=\"first:pl-16 text-left pr-40 h-32\">\n              {column.name}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, index) => (\n          <tr\n            key={index}\n            className=\"text-left h-32 odd:bg-gray-100 border-t-2 last:border-b-2 border-gray-200\"\n          >\n            {columns.map((column, index) => (\n              <td key={index} className=\"first:pl-16 pr-40\">\n                {column.key === 'treatmentType' ? (\n                  <BehandlingsTag />\n                ) : (\n                  row[column.key]\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport Table from '../components/Table';\n\nconst dataElement = {\n  created: '02.02.2020',\n  treatmentType: 'F',\n  applicant: 'Sigurd Grøneng',\n  tiltaksplass: 'Påmeldt',\n  period: '01.12.2021-15.06.2021',\n  status: '',\n};\n\nconst data = [dataElement, dataElement, dataElement, dataElement, dataElement];\n\nconst columns: any = [\n  { key: 'created', name: 'Opprettet' },\n  { key: 'treatmentType', name: 'Behandlingstype' },\n  { key: 'applicant', name: 'Søker' },\n  { key: 'tiltaksplass', name: 'Tiltaksplass' },\n  { key: 'period', name: 'Periode' },\n  { key: 'status', name: 'Status' },\n];\n\nconst ApplicationListPage = () => {\n  return (\n    <div>\n      <h1>Liste over søknader</h1>\n      <Table columns={columns} data={data} />\n    </div>\n  );\n};\n\nexport default ApplicationListPage;\n","import React from 'react';\nimport '@navikt/ds-css';\nimport '@navikt/ds-css-internal';\nimport './App.css';\nimport { Header } from '@navikt/ds-react-internal';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ApplicationListPage from './pages/ApplicationListPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header>\n          <Header.Title href=\"/#home\">NAV TPTS</Header.Title>\n          <Header.User name=\"Kong Harald\" style={{ marginLeft: 'auto' }} />\n        </Header>\n        <Routes>\n          <Route path={'/'} element={<ApplicationListPage />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}